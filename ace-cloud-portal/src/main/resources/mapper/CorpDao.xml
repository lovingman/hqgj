<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.portal.dao.CorpDao">
  <resultMap id="BaseResultMap" type="com.huacainfo.ace.portal.model.Corp">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="areaCode" jdbcType="VARCHAR" property="areaCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, name, areaCode,type
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from corp
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.huacainfo.ace.portal.model.Corp">
    insert into corp (id, pid, name, 
      areaCode,type)
    values (#{id,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{areaCode,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.portal.model.Corp">
    update corp
    set pid = #{pid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      areaCode = #{areaCode,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <resultMap extends="BaseResultMap" id="VoResultMap" type="com.huacainfo.ace.portal.vo.CorpVo">
     
  </resultMap>
  <sql id="Vo_Column_List">
    t.id, t.pid, t.name, t.areaCode , p.name as areaName,d.name typeName,t.type,e.name pnames
  </sql>
  <sql id="From_Statement">
    FROM corp t
    LEFT JOIN province p on t.areaCode = p.code
    LEFT JOIN (select code,name from dict where categoryId='73') d on t.type = d.code
    left join corp e on t.pid=e.id
  </sql>
  <sql id="Where_Condition">
    <where>
      <if test="condition.pid != null and condition.pid!=''">
         and t.pid = #{condition.pid,jdbcType=VARCHAR}
      </if>
      <if test="condition.name != null and condition.name!=''">
         and ( t.name like concat('%',#{condition.name,jdbcType=VARCHAR},'%')
           or t.id=#{condition.name,jdbcType=VARCHAR})
      </if>
      <if test="condition.areaCode != null and condition.areaCode!=''">
         and t.areaCode  like concat(#{condition.areaCode,jdbcType=VARCHAR},'%')
      </if>
        <if test="condition.type != null and condition.type!=''">
            and t.type = #{condition.type,jdbcType=VARCHAR}
        </if>
    </where>
  </sql>
  <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="VoResultMap">
      select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        where t.id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="findList" parameterType="java.lang.String" resultMap="VoResultMap">
            select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test="orderBy!=null and orderBy!=&quot;&quot;">
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY t.id desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
  </select>
  <select id="findCount" resultType="int">
    SELECT COUNT(*)
<include refid="From_Statement"/>
<include refid="Where_Condition"/>
  </select>
  <select id="isExit" parameterType="com.huacainfo.ace.portal.model.Corp" resultType="int">
      select count(1)
        from corp
        where name = #{name,jdbcType=VARCHAR} and areaCode=#{areaCode}
  </select>
    <select id="getList" resultType="map">
        select name label,id value from corp t where 0=0

        <if test="areaCode != null and areaCode !=''">
            and t.areaCode  like concat(#{areaCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="name != null and name !=''">
            and t.name like concat('%',#{name,jdbcType=VARCHAR},'%')
        </if>
  limit 0,20
    </select>
    <select id="getAreaDict" resultType="map">
        select code,name from province
    </select>
    <select id="getTypeDict" resultType="map">
        select code,name from dict where categoryId='73'
    </select>
    <select id="getCorpDict" resultType="map">
        select id as code,name from corp
    </select>
</mapper>