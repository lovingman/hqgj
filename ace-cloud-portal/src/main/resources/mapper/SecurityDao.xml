<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.portal.dao.SecurityDao">
    <select id="selectUsersByAccount" resultType="com.huacainfo.ace.common.security.model.Users">
        select t.user_id userId,
               t.account,
               t.password,
               t.sex,
               t.idCard,
               t.name,
               t.corpId,
               t.deptId,
               a.areaCode,
               t.birthday,
               t.status,
               t.lastLoginTime,
               t.mobile,
               t.email,
               t.createTime,
               a.pid parentCorpId,
               a.name corpName,
               t.curSyid,
               t.locked
        from users t left join
                 corp a on t.corpId=a.id where
            t.account=#{account}
    </select>

    <select id="selectUsersByAccount1" resultType="com.huacainfo.ace.common.security.model.Users">
        select t.user_id userId,
               t.account,
               t.password,
               t.sex,
               t.idCard,
               t.name,
               t.corpId,
               t.deptId,
               a.areaCode,
               t.birthday,
               t.status,
               t.lastLoginTime,
               t.mobile,
               t.email,
               t.createTime,
               a.pid parentCorpId,
               a.name corpName,
               t.curSyid,
               t.locked
        from users t left join
                 corp a on t.corpId=a.id where
            t.account=#{account} and t.isSync='y'
    </select>
    <select id="selectUsersByAccount2" resultType="com.huacainfo.ace.common.security.model.Users">
        select t.user_id userId,
               t.account,
               t.password,
               t.sex,
               t.idCard,
               t.name,
               t.corpId,
               t.deptId,
               a.areaCode,
               t.birthday,
               t.status,
               t.lastLoginTime,
               t.mobile,
               t.email,
               t.createTime,
               a.pid parentCorpId,
               a.name corpName,
               t.curSyid,
               t.locked
        from users t left join
                 corp a on t.corpId=a.id where
            t.account=#{account} and t.isSync='n'
    </select>

    <select id="selectRoleListByUserId" resultType="map">
        select
            concat('ROLE_',t.role_id) role,role_id id from users_role t where
                t.user_id =
                #{userId}
    </select>

    <select id="selectRoleTypeListByUserId" resultType="map">
        select TYPE
        from role
        where role_id in(
            select t.role_id role from users_role t
            where t.user_id = #{userId} )
    </select>

    <select id="selectUserCfgByUserId" resultType="map">
        select t.cfgKey, t.cfgName name,ifnull(a.cfgValue,t.cfgValue) value,t.group,t.editor
        from user_cfg_std t left  join (select userId, cfgKey, cfgValue from user_cfg where userId=#{userId,jdbcType=VARCHAR}) a on t.cfgKey=a.cfgKey
    </select>


    <select id="selectSyidByUserId" resultType="map">
        select
            ifnull(syid,'sys') syid
        from resources t
        where t.resources_id in
              (select
                   t.resources_id
               from role_resources t
               where t.role_id in
                     (select t.role_id
                      from users_role t where t.user_id = #{userId})) and syid!='sys'
        group by syid
    </select>


    <select id="loadConfig" resultType="map">
        select config_key, config_value from config where (
            syid=#{syid})
    </select>

    <select id="loadResourceDefine" resultType="map">
        select
            m.resources_url resources, group_concat(m.role_id) roles
        from
            (select
                 a.resources_url, concat('ROLE_' , ifnull(t.role_id, '0')) role_id
             from
                 resources a left join role_resources t
                                       on
                                           a.resources_id = t.resources_id) m
        where
            m.resources_url is not null
          and m.role_id is not null
        group by m.resources_url
    </select>

    <update id="updateUserLocked">
        update users set locked=#{locked},lockedTime=now() where account=#{account}
    </update>
    <select id="getLockedList" resultType="map">
        select user_id userId,name,account,lockedTime from users where locked='1' and TIMESTAMPDIFF(MINUTE,lockedTime,now())>30
    </select>


</mapper>
