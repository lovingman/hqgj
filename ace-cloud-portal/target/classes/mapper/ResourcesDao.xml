<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huacainfo.ace.portal.dao.ResourcesDao">
    <resultMap id="BaseResultMap" type="com.huacainfo.ace.portal.model.Resources">
        <id column="resources_id" jdbcType="VARCHAR" property="resourcesId"/>
        <result column="parent_resources_id" jdbcType="VARCHAR" property="parentResourcesId"/>
        <result column="resources_name" jdbcType="VARCHAR" property="resourcesName"/>
        <result column="resources_url" jdbcType="VARCHAR" property="resourcesUrl"/>
        <result column="resources_path" jdbcType="VARCHAR" property="resourcesPath"/>
        <result column="resources_icon" jdbcType="VARCHAR" property="resourcesIcon"/>
        <result column="resources_type" jdbcType="VARCHAR" property="resourcesType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="stauts" jdbcType="VARCHAR" property="stauts"/>
        <result column="sequence" jdbcType="INTEGER" property="sequence"/>
        <result column="syid" jdbcType="VARCHAR" property="syid"/>
    </resultMap>
    <sql id="Base_Column_List">
    resources_id, parent_resources_id, resources_name, resources_url, resources_path, 
    resources_icon, resources_type, create_time, create_user_id, remark, stauts, sequence, 
    syid
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from resources
        where resources_id = #{resourcesId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from resources
    where resources_id = #{resourcesId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.huacainfo.ace.portal.model.Resources">
    <selectKey keyProperty="resourcesId" resultType="string" order="BEFORE">
        select case when t.resources_id is NULL then concat(#{parentResourcesId,jdbcType=VARCHAR},'01') ELSE  concat('0',MAX(CAST(t.resources_id as UNSIGNED INTEGER))+1) END from resources t
        where t.parent_resources_id=#{parentResourcesId,jdbcType=VARCHAR}
    </selectKey>
    insert into resources (resources_id, parent_resources_id, resources_name, 
      resources_url, resources_path, resources_icon, 
      resources_type, create_time, create_user_id, 
      remark, stauts, sequence, 
      syid)
    values (#{resourcesId,jdbcType=VARCHAR}, #{parentResourcesId,jdbcType=VARCHAR}, #{resourcesName,jdbcType=VARCHAR}, 
      #{resourcesUrl,jdbcType=VARCHAR}, #{resourcesPath,jdbcType=VARCHAR}, #{resourcesIcon,jdbcType=VARCHAR}, 
      #{resourcesType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{stauts,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, 
      #{syid,jdbcType=VARCHAR})
  </insert>

    <insert id="insertNoKey" parameterType="com.huacainfo.ace.portal.model.Resources">
        insert into resources (resources_id, parent_resources_id, resources_name,
        resources_url, resources_path, resources_icon,
        resources_type, create_time, create_user_id,
        remark, stauts, sequence,
        syid)
        values (#{resourcesId,jdbcType=VARCHAR}, #{parentResourcesId,jdbcType=VARCHAR}, #{resourcesName,jdbcType=VARCHAR},
        #{resourcesUrl,jdbcType=VARCHAR}, #{resourcesPath,jdbcType=VARCHAR}, #{resourcesIcon,jdbcType=VARCHAR},
        #{resourcesType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{stauts,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER},
        #{syid,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.huacainfo.ace.portal.model.Resources">
    update resources
		set parent_resources_id = #{parentResourcesId,jdbcType=VARCHAR},
            resources_name = #{resourcesName,jdbcType=VARCHAR},
            resources_url = #{resourcesUrl,jdbcType=VARCHAR},
            resources_path = #{resourcesPath,jdbcType=VARCHAR},
            resources_icon = #{resourcesIcon,jdbcType=VARCHAR},
            resources_type = #{resourcesType,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            stauts = #{stauts,jdbcType=VARCHAR},
		syid= #{syid,jdbcType=VARCHAR},
            sequence=#{sequence,jdbcType=INTEGER}
		where resources_id = #{resourcesId,jdbcType=VARCHAR}
  </update>
    <resultMap extends="BaseResultMap" id="VoResultMap" type="com.huacainfo.ace.portal.vo.ResourcesVo">

    </resultMap>
    <sql id="Vo_Column_List">
        resources.resources_id, resources.sequence,resources.parent_resources_id,
        resources.resources_name, resources.resources_url,
        resources.resources_path,
        resources.resources_icon, resources.resources_type, resources.create_time,
        resources.create_user_id, resources.remark,
        resources.stauts,users.name create_user_name,resources.syid
      </sql>
    <sql id="From_Statement">
     from resources
      left join users on resources.create_user_id=users.user_id
    </sql>
    <sql id="Where_Condition">
        <where>
            1 = 1
            <if test="condition.resourcesName!=null and condition.resourcesName!=&quot;&quot;">
                and resources_name like concat(#{condition.resourcesName,jdbcType=VARCHAR},'%')
            </if>
            <if test="condition.resourcesType!=null and condition.resourcesType!=&quot;&quot;">
                and resources_type = #{condition.resourcesType,jdbcType=VARCHAR}
            </if>
            <if test="condition.resourcesId!=null and condition.resourcesId!=&quot;&quot;">
                and resources_id = #{condition.resourcesId,jdbcType=VARCHAR}
            </if>
            <if test="condition.parentResourcesId!=null and condition.parentResourcesId!=&quot;&quot;">
                and parent_resources_id = #{condition.parentResourcesId,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>
    <select id="selectVoByPrimaryKey" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        resources_id, parent_resources_id, resources_name, resources_url, resources_path,
        resources_icon, resources_type, create_time, create_user_id, remark, stauts, sequence,
        syid
            from resources
        where resources_id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="findList" parameterType="java.lang.String" resultMap="VoResultMap">
        select
        <include refid="Vo_Column_List"/>
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
        <choose>
            <when test='orderBy!=null and orderBy!=""'>
                ORDER BY ${orderBy}
            </when>
            <otherwise>
                ORDER BY resources.create_time desc
            </otherwise>
        </choose>
        limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
    </select>
    <select id="findCount" resultType="int">
        SELECT COUNT(*)
        <include refid="From_Statement"/>
        <include refid="Where_Condition"/>
    </select>
    <select id="isExist" parameterType="com.huacainfo.ace.portal.model.Resources" resultType="int">
      select count(1)
      from resources
      where resources_id = #{resourcesId,jdbcType=VARCHAR}
  </select>
    <delete id="deleteByIds">
        delete from resources
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="isExitByName" resultType="int">
      select count(*)
      from resources
      where resources_name = #{name,jdbcType=VARCHAR}
    </select>

    <select id="selectResourcesTreeList" resultType="map">
        select t.resources_id ID,
               t.parent_resources_id PID,
               t.resources_name TEXT,
               ifnull(t.resources_icon,'默认') ICON,
               t.resources_type SRC,
               t.resources_url  HREF,
               ifnull(t.remark,'默认')  ICONCLS,
               (select
                    count(*) from resources where
                    parent_resources_id=t.resources_id) CHILD_COUNT
        from resources t
        ORDER BY t.sequence,t.resources_id
    </select>

    <update id="updateSequence">
        update resources
        set sequence = #{sequence,jdbcType=INTEGER}
        where resources_id = #{resourcesId,jdbcType=VARCHAR}
    </update>

    <select id="loadResourceDefine" resultType="map">
        select
        m.resources_url resources, group_concat(m.role_id) roles
        from (select
                a.resources_url, concat('ROLE_' , ifnull(t.role_id, '0')) role_id
              from resources a
              left join role_resources t on a.resources_id = t.resources_id
        ) m
        where m.resources_url is not null
        and m.role_id is not null
        group by m.resources_url
    </select>
    <select id="getListByPid" resultType="map">
        select t.resources_id as id ,t.resources_name name from resources t where t.parent_resources_id=#{pid,jdbcType=VARCHAR}
        ORDER BY t.sequence,t.resources_id
    </select>
</mapper>
