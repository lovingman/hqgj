{"version":3,"sources":["webpack:///./src/api/sys/dictCategory.js","webpack:///./src/api/sys/dict.js","webpack:///./src/views/sys/dict/staticDictionary/add.vue?db5f","webpack:///src/views/sys/dict/staticDictionary/add.vue","webpack:///./src/views/sys/dict/staticDictionary/add.vue?789e","webpack:///./src/views/sys/dict/staticDictionary/add.vue"],"names":["__webpack_require__","d","__webpack_exports__","Categorypage","create","update","deleteById","getById","_utils_request__WEBPACK_IMPORTED_MODULE_0__","query","request","url","method","params","data","transformRequest","ret","it","encodeURIComponent","headers","Content-Type","id","page","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","shadow","staticStyle","height","_v","directives","name","rawName","value","expression","element-loading-text","element-loading-spinner","ref","width","rules","model","addform","label-width","label","prop","clearable","placeholder","callback","$$v","$set","_l","item","key","categoryId","on","click","back","type","$event","submitForm","staticRenderFns","addvue_type_script_lang_js_","dict","loading","fenye","currentPage","pagesize","total","code","required","message","trigger","min","max","computed","Object","objectSpread2","vuex_esm","created","listQuery","methods","_this","assign","pageNum","pageSize","totalRecord","dictCategory","then","response","rows","formName","_this2","$refs","validate","valid","jsons","JSON","stringify","$confirm","confirmButtonText","cancelButtonText","center","catch","error","$router","push","path","staticDictionary_addvue_type_script_lang_js_","component","componentNormalizer"],"mappings":"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","file":"assets/js/chunk-1f37f810.80efe59d.js","sourcesContent":["import request from '@/utils/request'\r\n// export function page(query) {\r\n//   return request({\r\n//     url: '/portal/dictCategory/page',\r\n//     method: 'get',\r\n//     params: query\r\n//   })\r\n// }\r\n// export function create(data) {\r\n//   return request({\r\n//     url: '/portal/dictCategory/create',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function update(data) {\r\n//   return request({\r\n//     url: '/portal/dictCategory/update',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function deleteById(id) {\r\n//     return request({\r\n//       url: '/portal/dictCategory/deleteById',\r\n//       method: 'get',\r\n//       params: {id:id}\r\n//     })\r\n//   }\r\n// export function deleteByIds(ids) {\r\n//     return request({\r\n//       url: '/portal/dictCategory/deleteByIds',\r\n//       method: 'get',\r\n//       params: {ids:ids}\r\n//     })\r\n//   }\r\n// export function getById(id) {\r\n//     return request({\r\n//         url: '/portal/dictCategory/getById',\r\n//         method: 'get',\r\n//         params: {id:id}\r\n//     })\r\n// }\r\nexport function Categorypage(query) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/page',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\nexport function create(data) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/create',\r\n    method: 'post',\r\n    data:data,\r\n    transformRequest: [function (data) {\r\n      let ret = ''\r\n      for (let it in data) {\r\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n      }\r\n      return ret\r\n    }],\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  })\r\n}\r\nexport function update(data) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/update',\r\n    method: 'post',\r\n    data:data,\r\n    transformRequest: [function (data) {\r\n      let ret = ''\r\n      for (let it in data) {\r\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n      }\r\n      return ret\r\n    }],\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  })\r\n}\r\nexport function deleteById(id) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/deleteById',\r\n    method: 'get',\r\n    params: {id:id}\r\n  })\r\n}\r\nexport function deleteByIds(ids) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/deleteByIds',\r\n    method: 'get',\r\n    params: {ids:ids}\r\n  })\r\n}\r\nexport function getById(id) {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/getById',\r\n    method: 'get',\r\n    params: {id:id}\r\n  })\r\n}\r\n","import request from '@/utils/request'\r\n// export function page(query) {\r\n//   return request({\r\n//     url: '/portal/dict/page',\r\n//     method: 'get',\r\n//     params: query\r\n//   })\r\n// }\r\n// export function create(data) {\r\n//   return request({\r\n//     url: '/portal/dict/create',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function update(data) {\r\n//   return request({\r\n//     url: '/portal/dict/update',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function deleteById(id) {\r\n//     return request({\r\n//       url: '/portal/dict/deleteById',\r\n//       method: 'get',\r\n//       params: {id:id}\r\n//     })\r\n//   }\r\n// export function deleteByIds(ids) {\r\n//     return request({\r\n//       url: '/portal/dict/deleteByIds',\r\n//       method: 'get',\r\n//       params: {ids:ids}\r\n//     })\r\n//   }\r\n// export function getById(id) {\r\n//     return request({\r\n//         url: '/portal/dict/getById',\r\n//         method: 'get',\r\n//         params: {id:id}\r\n//     })\r\n// }\r\n//\r\n// export function getList() {\r\n//   return request({\r\n//       url: '/portal/dictCategory/findDictCategoryListAll',\r\n//       method: 'get'\r\n//   })\r\n// }\r\nexport function page(query) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/page',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\nexport function create(data) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/create',\r\n    method: 'post',\r\n    data:data,\r\n    transformRequest: [function (data) {\r\n      let ret = ''\r\n      for (let it in data) {\r\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n      }\r\n      return ret\r\n    }],\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  })\r\n}\r\nexport function update(data) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/update',\r\n    method: 'post',\r\n    data:data,\r\n    transformRequest: [function (data) {\r\n      let ret = ''\r\n      for (let it in data) {\r\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n      }\r\n      return ret\r\n    }],\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  })\r\n}\r\nexport function deleteById(id) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/deleteById',\r\n    method: 'get',\r\n    params: {id:id}\r\n  })\r\n}\r\nexport function deleteByIds(ids) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/deleteByIds',\r\n    method: 'get',\r\n    params: {ids:ids}\r\n  })\r\n}\r\nexport function getById(id) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/getById',\r\n    method: 'get',\r\n    params: {id:id}\r\n  })\r\n}\r\n\r\nexport function getList() {\r\n  return request({\r\n    url: '/zcpa-portal/dictCategory/findDictCategoryListAll',\r\n    method: 'get'\r\n  })\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('el-card',{attrs:{\"shadow\":\"never\"}},[_c('el-container',[_c('el-header',{staticStyle:{\"height\":\"1.5rem\"}},[_c('div',{staticClass:\"section_title\"},[_vm._v(\"静态字典\")])]),_c('el-main',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"element-loading-text\":\"请求中\",\"element-loading-spinner\":\"el-icon-loading\"}},[_c('el-form',{ref:\"ruleForm\",staticStyle:{\"width\":\"100%\"},attrs:{\"rules\":_vm.rules,\"model\":_vm.addform,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"字典类型\",\"prop\":\"categoryId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择字典类型\"},model:{value:(_vm.addform.categoryId),callback:function ($$v) {_vm.$set(_vm.addform, \"categoryId\", $$v)},expression:\"addform.categoryId\"}},_vm._l((_vm.dict),function(item){return _c('el-option',{key:item.categoryId,attrs:{\"label\":item.name,\"value\":item.categoryId}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.addform.name),callback:function ($$v) {_vm.$set(_vm.addform, \"name\", $$v)},expression:\"addform.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"编号\",\"prop\":\"code\"}},[_c('el-input',{model:{value:(_vm.addform.code),callback:function ($$v) {_vm.$set(_vm.addform, \"code\", $$v)},expression:\"addform.code\"}})],1),_c('el-form-item',{staticClass:\"submit\"},[_c('el-button',{on:{\"click\":_vm.back}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('ruleForm')}}},[_vm._v(\"保存\")])],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"app-container\">\r\n    <el-card shadow=\"never\">\r\n      <el-container>\r\n        <el-header style=\"height:1.5rem\">\r\n          <div class=\"section_title\">静态字典</div>\r\n        </el-header>\r\n        <el-main\r\n          v-loading=\"loading\"\r\n          element-loading-text=\"请求中\"\r\n          element-loading-spinner=\"el-icon-loading\"\r\n        >\r\n          <el-form\r\n            :rules=\"rules\"\r\n            ref=\"ruleForm\"\r\n            :model=\"addform\"\r\n            label-width=\"80px\"\r\n            style=\"width:100%\"\r\n          >\r\n            <el-form-item label=\"字典类型\" prop=\"categoryId\">\r\n              <el-select v-model=\"addform.categoryId\" clearable placeholder=\"请选择字典类型\" style=\"width:100%\">\r\n                <el-option\r\n                        v-for=\"item in dict\"\r\n                        :key=\"item.categoryId\"\r\n                        :label=\"item.name\"\r\n                        :value=\"item.categoryId\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"名称\" prop=\"name\">\r\n              <el-input v-model=\"addform.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"编号\" prop=\"code\">\r\n              <el-input v-model=\"addform.code\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item class=\"submit\">\r\n              <el-button @click=\"back\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">保存</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-main>\r\n      </el-container>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { create} from \"@/api/sys/dict\";\r\nimport { Categorypage} from \"@/api/sys/dictCategory\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      dict: {},\r\n      loading: false,\r\n      fenye:{\r\n        currentPage: 1, // 列表显示初始页\r\n        pagesize: 100, //  列表显示每页的数据\r\n        total: 0,\r\n      },\r\n      addform: {\r\n        categoryId: \"\",\r\n        name: \"\",\r\n        code: \"\"\r\n      },\r\n      rules: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: \"请输入字典名称\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            min: 2,\r\n            max: 50,\r\n            message: \"长度在 2 到 50 个字符\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        categoryId: [\r\n          {\r\n            required: true,\r\n            message: \"请选择字典类型\",\r\n            trigger: \"change\"\r\n          }\r\n        ],\r\n        code: [\r\n          {\r\n            required: true,\r\n            message: \"请输入编号\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"userProp\"])\r\n  },\r\n  created() {\r\n    this.listQuery();\r\n  },\r\n  methods: {\r\n    listQuery() {\r\n      this.query = Object.assign({\r\n        pageNum: this.fenye.currentPage,\r\n        pageSize: this.fenye.pagesize,\r\n        totalRecord: this.fenye.total\r\n      });\r\n      Categorypage(this.query).then(response => {\r\n        this.dict = response.rows;\r\n      });\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          create({jsons: JSON.stringify(this.addform)})\r\n            .then(response => {\r\n              this.loading = false;\r\n              this.$confirm(response.message + \" 是否返回?\", \"提示\", {\r\n                confirmButtonText: \"确定\",\r\n                cancelButtonText: \"取消\",\r\n                type: \"success\",\r\n                center: true\r\n              }).then(() => {\r\n                this.back();\r\n              }).catch(() => {});\r\n            })\r\n                  .catch(error => {\r\n                    this.loading = false;\r\n\r\n                  });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      this.$router.push({\r\n        path: \"/sys/dict/staticDictionary\"\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./add.vue?vue&type=template&id=807ddbe6&\"\nimport script from \"./add.vue?vue&type=script&lang=js&\"\nexport * from \"./add.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}