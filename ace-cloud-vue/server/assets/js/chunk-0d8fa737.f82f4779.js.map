{"version":3,"sources":["webpack:///./src/utils/areaCode-util.js","webpack:///./src/views/sys/corp/edit/index.vue?a438","webpack:///src/views/sys/corp/edit/index.vue","webpack:///./src/views/sys/corp/edit/index.vue?6896","webpack:///./src/views/sys/corp/edit/index.vue","webpack:///./src/api/sys.js","webpack:///./src/api/sys/corp.js"],"names":["toArray","areaCode","length","substring","__webpack_require__","d","__webpack_exports__","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","shadow","staticStyle","height","_v","directives","name","rawName","value","expression","element-loading-text","element-loading-spinner","ref","width","rules","model","form","label-width","label","prop","callback","$$v","$set","placeholder","_l","dict","item","key","code","options","areaCodeOptions","props","areaCodeProps","clearable","change-on-select","filterable","remote","reserve-keyword","remote-method","pidQuery","on","click","back","type","$event","submitForm","staticRenderFns","editvue_type_script_lang_js_","data","loading","id","pids","pid","required","message","trigger","min","max","computed","Object","objectSpread2","vuex_esm","created","AreaCodeQuery","dictQuery","load","methods","_this","$route","query","corp","then","response","areaCode_util","_this2","userProp","$store","getters","console","log","sys","hasSelf","_this3","formName","_this4","$refs","validate","valid","pop","jsons","JSON","stringify","$confirm","confirmButtonText","cancelButtonText","center","catch","error","reject","$router","push","path","_this5","corp_editvue_type_script_lang_js_","component","componentNormalizer","getAreaTree","getDict","fileUpload","filedown","fileUpImg","_utils_request__WEBPACK_IMPORTED_MODULE_0__","request","url","method","params","ids","categoryIds","fileobj","param","FormData","append","file","headers","Content-Type","responseType","transformRequest","ret","it","encodeURIComponent","page","create","update","deleteById","getById","getList"],"mappings":"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","file":"assets/js/chunk-0d8fa737.f82f4779.js","sourcesContent":["\r\nexport function toArray(areaCode){\r\n    if(!areaCode){\r\n        return [];\r\n    }\r\n    if(areaCode.length==4){\r\n        return [areaCode];\r\n    }\r\n    if(areaCode.length==6){\r\n        return [areaCode.substring(0,4),areaCode];\r\n    }\r\n    if(areaCode.length==8){\r\n        return [areaCode.substring(0,4),areaCode.substring(0,6),areaCode];\r\n    }\r\n    return [areaCode];\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('el-card',{attrs:{\"shadow\":\"never\"}},[_c('el-container',[_c('el-header',{staticStyle:{\"height\":\"1.5rem\"}},[_c('div',{staticClass:\"section_title\"},[_vm._v(\"基本信息\")])]),_c('el-main',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"element-loading-text\":\"请求中\",\"element-loading-spinner\":\"el-icon-loading\"}},[_c('el-form',{ref:\"ruleForm\",staticStyle:{\"width\":\"50%\"},attrs:{\"rules\":_vm.rules,\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"单位类型\",\"prop\":\"type\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择单位类型\"},model:{value:(_vm.form.type),callback:function ($$v) {_vm.$set(_vm.form, \"type\", $$v)},expression:\"form.type\"}},_vm._l((_vm.dict['73']),function(item){return _c('el-option',{key:item.code,attrs:{\"label\":item.name,\"value\":item.code}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"行政区划\",\"prop\":\"areaCode\"}},[_c('el-cascader',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择行政区划\",\"options\":_vm.areaCodeOptions,\"props\":_vm.areaCodeProps,\"clearable\":\"\",\"change-on-select\":\"\",\"filterable\":\"\"},model:{value:(_vm.form.areaCode),callback:function ($$v) {_vm.$set(_vm.form, \"areaCode\", $$v)},expression:\"form.areaCode\"}})],1),_c('el-form-item',{attrs:{\"label\":\"归属单位\",\"prop\":\"pid\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"remote\":\"\",\"reserve-keyword\":\"\",\"placeholder\":\"请输入归属单位名称\",\"remote-method\":_vm.pidQuery},model:{value:(_vm.form.pid),callback:function ($$v) {_vm.$set(_vm.form, \"pid\", $$v)},expression:\"form.pid\"}},_vm._l((_vm.pids),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',[_c('el-button',{on:{\"click\":_vm.back}},[_vm._v(\"取消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('ruleForm')}}},[_vm._v(\"保存\")])],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"app-container\">\r\n    <el-card shadow=\"never\">\r\n      <el-container>\r\n        <el-header style=\"height:1.5rem\">\r\n          <div class=\"section_title\">基本信息</div>\r\n        </el-header>\r\n        <el-main\r\n          v-loading=\"loading\"\r\n          element-loading-text=\"请求中\"\r\n          element-loading-spinner=\"el-icon-loading\"\r\n        >\r\n          <el-form :rules=\"rules\" ref=\"ruleForm\" :model=\"form\" label-width=\"80px\" style=\"width:50%\">\r\n            <el-form-item label=\"名称\" prop=\"name\">\r\n              <el-input v-model=\"form.name\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"单位类型\" prop=\"type\">\r\n             <el-select v-model=\"form.type\" placeholder=\"请选择单位类型\" style=\"width:100%\">\r\n                <el-option\r\n                  v-for=\"item in dict['73']\"\r\n                  :key=\"item.code\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.code\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"行政区划\" prop=\"areaCode\">\r\n              <el-cascader\r\n                placeholder=\"请选择行政区划\"\r\n                v-model=\"form.areaCode\"\r\n                :options=\"areaCodeOptions\"\r\n                :props=\"areaCodeProps\"\r\n                clearable\r\n                change-on-select\r\n                filterable\r\n             style=\"width:100%\"></el-cascader>\r\n            </el-form-item>\r\n\r\n             <el-form-item label=\"归属单位\" prop=\"pid\">\r\n              <el-select\r\n                v-model=\"form.pid\"\r\n                filterable\r\n                remote\r\n                reserve-keyword\r\n                placeholder=\"请输入归属单位名称\"\r\n                :remote-method=\"pidQuery\"\r\n                 style=\"width:100%\">\r\n                <el-option\r\n                v-for=\"item in pids\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n                </el-option>\r\n            </el-select>\r\n            </el-form-item>\r\n\r\n\r\n\r\n            <el-form-item>\r\n              <el-button @click=\"back\">取消</el-button>\r\n              <el-button type=\"primary\"  @click=\"submitForm('ruleForm')\">保存</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-main>\r\n      </el-container>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { update,getList,getById } from \"@/api/sys/corp\";\r\nimport { getAreaTree,getDict } from \"@/api/sys\";\r\nimport { mapGetters } from 'vuex';\r\nimport { toArray } from \"@/utils/areaCode-util\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      id:'',\r\n      dict:{},\r\n      areaCodeOptions: [],\r\n      areaCodeProps: {\r\n        value: \"id\",\r\n        label: \"text\"\r\n      },\r\n      pids:[],\r\n      form: {\r\n        id: \"\",\r\n        name: \"\",\r\n        areaCode: [],\r\n        type: \"\",\r\n        pid: \"\"\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \"请输入单位名称\", trigger: \"blur\" },\r\n          { min: 2, max: 50, message: \"长度在 2 到 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        type: [\r\n          { required: true, message: \"请选择单位类型\", trigger: \"change\" }\r\n        ],\r\n        areaCode: [\r\n          { required: true, message: \"请选择行政区划\", trigger: \"change\" }\r\n        ],\r\n        pid: [\r\n          { required: true, message: \"请选择归属单位\", trigger: \"change\" }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n   computed: {\r\n    ...mapGetters([\r\n      'userProp'\r\n    ])\r\n  },\r\n  created() {\r\n    this.AreaCodeQuery();\r\n    this.pidQuery();\r\n    this.dictQuery();\r\n    this.load();\r\n  },\r\n  methods: {\r\n    load(){\r\n        this.loading = true;\r\n        this.id = this.$route.query.id;\r\n        getById(this.id)\r\n        .then(response => {\r\n          this.loading = false;\r\n          this.form=response.data;\r\n          this.form.areaCode=toArray(response.data.areaCode);\r\n        })\r\n    },\r\n    AreaCodeQuery() {\r\n       const userProp = this.$store.getters.userProp;\r\n       console.log(userProp);\r\n      getAreaTree({ pid: userProp.areaCode, type: 3, hasSelf: \"true\" })\r\n        .then(response => {\r\n          this.areaCodeOptions = response.data;\r\n        })\r\n\r\n    },\r\n    dictQuery(){\r\n        getDict(\"73\")\r\n        .then(response => {\r\n          this.dict=response.data;\r\n        })\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n            this.loading = true;\r\n            this.form.areaCode=this.form.areaCode.pop();\r\n            update({ jsons: JSON.stringify(this.form) })\r\n            .then(response => {\r\n              this.loading = false;\r\n              this.$confirm(response.message + \" 是否返回?\", \"提示\", {\r\n                  confirmButtonText: \"确定\",\r\n                  cancelButtonText: \"取消\",\r\n                  type: \"success\",\r\n                  center: true\r\n              })\r\n              .then(() => {\r\n                  this.back();\r\n              })\r\n              .catch(() => {});\r\n            })\r\n            .catch(error => {\r\n              this.loading = false;\r\n              reject(error);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    back() {\r\n      this.$router.push({ path: \"/sys/corp\" });\r\n    },\r\n    pidQuery(query) {\r\n        if (true) {\r\n            getList(query)\r\n            .then(response => {\r\n                this.pids = response.data;\r\n            })\r\n        } else {\r\n          this.pids = [];\r\n        }\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>\r\n\r\n\r\n\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=3ede1b53&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import request from '@/utils/request'\r\n// export function getAreaTree(query) {\r\n//   return request({\r\n//     url: '/portal/system/getAreaTree',\r\n//     method: 'get',\r\n//     params: query\r\n//   })\r\n// }\r\n// export function initProvinceCity(query) {\r\n//   return request({\r\n//     url: '/portal/system/getAreaTree?pid=00&type=4',\r\n//     method: 'get',\r\n//     params: query\r\n//   })\r\n// }\r\n// export function getDict(ids) {\r\n//   return request({\r\n//     url: '/portal/dict/getByCategoryIds',\r\n//     method: 'get',\r\n//     params: {categoryIds:ids}\r\n//   })\r\n// }\r\n// export function fileUpload(fileobj,url) {\r\n//   let param = new FormData()\r\n//   param.append('file',fileobj.file)\r\n//   return request({\r\n//     method: 'post',\r\n//     url: url,\r\n//     headers: {'Content-Type':'multipart/form-data'},\r\n//     data: param\r\n//   })\r\n// }\r\n//\r\n// export function filedown(query,url) {\r\n//   return request({\r\n//     url: url,\r\n//     method: 'get',\r\n//     params: query,\r\n//     responseType: 'blob'\r\n//   })\r\n// }\r\n// export function getPAreaCode(areaCode) {\r\n//   return request({\r\n//     url: '/portal/system/getPAreaCode',\r\n//     method: 'get',\r\n//     params:{areaCode:areaCode}\r\n//   })\r\n// }\r\n//\r\n// export function fileUpImg(url,data) {\r\n//   console.log(url)\r\n//   console.log(data)\r\n//   return request({\r\n//     url: url,\r\n//     method: 'post',\r\n//     data: data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\nexport function getAreaTree(query) {\r\n  return request({\r\n    url: '/zcpa-portal/system/getAreaTree',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\nexport function initProvinceCity(query) {\r\n  return request({\r\n    url: '/zcpa-portal/system/getAreaTree?pid=00&type=4',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\nexport function getDict(ids) {\r\n  return request({\r\n    url: '/zcpa-portal/dict/getByCategoryIds',\r\n    method: 'get',\r\n    params: {categoryIds:ids}\r\n  })\r\n}\r\nexport function fileUpload(fileobj,url) {\r\n  let param = new FormData()\r\n  param.append('file',fileobj.file)\r\n  return request({\r\n    method: 'post',\r\n    url: url,\r\n    headers: {'Content-Type':'multipart/form-data'},\r\n    data: param\r\n  })\r\n}\r\n\r\nexport function filedown(query,url) {\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    params: query,\r\n    responseType: 'blob'\r\n  })\r\n}\r\nexport function getPAreaCode(areaCode) {\r\n  return request({\r\n    url: '/zcpa-portal/system/getPAreaCode',\r\n    method: 'get',\r\n    params:{areaCode:areaCode}\r\n  })\r\n}\r\n\r\nexport function fileUpImg(url,data) {\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data: data,\r\n    transformRequest: [function (data) {\r\n      let ret = ''\r\n      for (let it in data) {\r\n        ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n      }\r\n      return ret\r\n    }],\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  })\r\n}\r\n","import request from '@/utils/request'\r\n// export function page(query) {\r\n//   return request({\r\n//     url: '/portal/corp/page',\r\n//     method: 'get',\r\n//     params: query\r\n//   })\r\n// }\r\n// export function create(data) {\r\n//   return request({\r\n//     url: '/portal/corp/create',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function update(data) {\r\n//   return request({\r\n//     url: '/portal/corp/update',\r\n//     method: 'post',\r\n//     data:data,\r\n//     transformRequest: [function (data) {\r\n//       let ret = ''\r\n//       for (let it in data) {\r\n//         ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n//       }\r\n//       return ret\r\n//     }],\r\n//     headers: {\r\n//       'Content-Type': 'application/x-www-form-urlencoded'\r\n//     }\r\n//   })\r\n// }\r\n// export function deleteById(id) {\r\n//     return request({\r\n//       url: '/portal/corp/deleteById',\r\n//       method: 'get',\r\n//       params: {id:id}\r\n//     })\r\n//   }\r\n// export function deleteByIds(ids) {\r\n//     return request({\r\n//       url: '/portal/corp/deleteByIds',\r\n//       method: 'get',\r\n//       params: {ids:ids}\r\n//     })\r\n//   }\r\n// export function getById(id) {\r\n//     return request({\r\n//         url: '/portal/corp/getById',\r\n//         method: 'get',\r\n//         params: {id:id}\r\n//     })\r\n// }\r\n//\r\n// export function getList(name) {\r\n//   return request({\r\n//       url: '/portal/corp/getList',\r\n//       method: 'get',\r\n//       params: {name:name}\r\n//   })\r\n// }\r\nexport function page(query) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/page',\r\n        method: 'get',\r\n        params: query\r\n    })\r\n}\r\nexport function create(data) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/create',\r\n        method: 'post',\r\n        data:data,\r\n        transformRequest: [function (data) {\r\n            let ret = ''\r\n            for (let it in data) {\r\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n            }\r\n            return ret\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    })\r\n}\r\nexport function update(data) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/update',\r\n        method: 'post',\r\n        data:data,\r\n        transformRequest: [function (data) {\r\n            let ret = ''\r\n            for (let it in data) {\r\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n            }\r\n            return ret\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    })\r\n}\r\nexport function deleteById(id) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/deleteById',\r\n        method: 'get',\r\n        params: {id:id}\r\n    })\r\n}\r\nexport function deleteByIds(ids) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/deleteByIds',\r\n        method: 'get',\r\n        params: {ids:ids}\r\n    })\r\n}\r\nexport function getById(id) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/getById',\r\n        method: 'get',\r\n        params: {id:id}\r\n    })\r\n}\r\n\r\nexport function getList(name) {\r\n    return request({\r\n        url: '/zcpa-portal/corp/getList',\r\n        method: 'get',\r\n        params: {name:name}\r\n    })\r\n}\r\n"],"sourceRoot":""}